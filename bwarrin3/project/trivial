#!/usr/bin/env python

import sys
import os
import ast

from tokenizer import tokenize
from parser import parse
from evaluator import evaluate

#compiles trvial files (.t) to binary encoded ast
def compileTrivial(argv):
    if (len(argv) == 0):
        print("Must provide trivial file to compile\n")
        exit()

    output_filename = "out"
    source_code = ""

    try:
        with open(argv[0], 'r') as f:
            source_code = f.read()
            f.close()
    except Exception:
        print(f"Error opening file: {argv[0]}\n")
        exit()

    arguments = argv[1:]
    skip = 0
    for index, argument in enumerate(arguments):
        if skip > 0:
            skip = skip - 1
            continue
        elif argument == "-o":
            if (len(arguments) <= index + 1):
                print("filename must follow -o flag\n")
                exit()
            output_filename = arguments[index + 1]
            skip = 1
        else:
            print("invalid argument passed\n")
            exit()
    
    #try compiling trivial file
    try:
        tokens = tokenize(source_code)
        ast = parse(tokens)
    except Exception as e:
        print("Error compiling trivial file\n", e)
        exit()

    bits = "TRIVIAL FILE\n" + '\n'.join(format(ord(i), '08b') for i in str(ast))

    try:
        with open(output_filename, 'w') as f:
            f.write(bits)
    except Exception:
        print(f"error writing to file: {output_filename}")

#cleans any files associated with trivial
def cleanTrivial():
    delete_trivial_files = False
    delete_compiled_files = False

    file_type = input("Delete 't'rivial files, 'c'ompiled trivial files, or 'b'oth? ")
    if file_type == 't':
        delete_trivial_files = True
    elif file_type == 'c':
        delete_compiled_files = True
    elif file_type == 'b':
        delete_trivial_files = True
        delete_compiled_files = True
    

    for filename in os.listdir("."):
        if os.path.isfile(filename):
            with open(filename, "r") as f:
                file_chars = f.read(13)
            #if beginning of compiled file or has ext .t
            if delete_compiled_files and file_chars == "TRIVIAL FILE\n" or delete_trivial_files and os.path.splitext(filename)[1] == ".t":
                delete_file = input(f"Delete file: {filename} (y/n): ")
                if (delete_file == 'y'):
                    os.remove(filename)

#runs compiled trivial files
def runTrivial(argv):
    environment = {}
    filename = "out"

    # Check for command line arguments
    if len(argv) > 0:
        filename = argv[0]

    try:
        # Filename provided else default
        with open(filename, 'r') as f:
            source_code = f.read()
    except Exception:
        print(f"Error opening file: {filename}\n")
        exit()


    #strip trival file header and new lines from binary
    source_code = source_code[13:].replace('\n', '')
    string_source_code = ""

    #convert binary back to string ast
    for i in range(0, len(source_code), 8):
        binc = source_code[i:i + 8]
        num = int(binc, 2)
        string_source_code += chr(num)

    #convert str source_code to dict
    evaluate(ast.literal_eval(string_source_code), environment)

def helpTrivial():
    choice = ""
    while ("4" not in choice) and ("q" not in choice):
        if "1" in choice:
            print("\n\n\n\n\n-----------------TRIVIAL COMPILE-----------------")
            print("The trivial compile command takes a provided")
            print("trivial file. It then gets the ast for said file.")
            print("Then compiles it to a binary encoded version.")
            print("Then stores it in the provided file using the")
            print("-o flag otherwise defaulting to the 'out' file.\n")
            print("Usage:\n")
            print("./trivial compile file.t\n")
            print("./trivial compile file.t -o outputFile\n")
            print("('./trivial' used but 'python trivial' will work)")
            print("-------------------------------------------------")
            choice = input("Press enter to go back or 'q' to exit: ")
            if ("q" not in choice):
                choice = ""
        elif "2" in choice:
            print("\n\n\n\n\n------------------TRIVIAL CLEAN------------------")
            print("The trivial clean command looks through current")
            print("directory and will delete files based on what is")
            print("prompted for. It will then ask for confirmation")
            print("for each deleted file. Trivial files are")
            print("identified by the .t extension while compiled")
            print("trivial files have a header in each file to")
            print("identify said compiled file.\n")
            print("Usage:\n")
            print("./trivial clean\n")
            print("('./trivial' used but 'python trivial' will work)")
            print("-------------------------------------------------")
            choice = input("Press enter to go back or 'q' to exit: ")
            if ("q" not in choice):
                choice = ""
        elif "3" in choice:
            print("\n\n\n\n\n-------------------TRIVIAL RUN-------------------")
            print("The trivial run command will run the provided")
            print("compiled trivial file. It will run the 'out' file")
            print("by default if no file is provided.\n")
            print("Usage:\n")
            print("./trivial run\n")
            print("./trivial run file\n")
            print("('./trivial' used but 'python trivial' will work)")
            print("-------------------------------------------------")
            choice = input("Press enter to go back or 'q' to exit: ")
            if ("q" not in choice):
                choice = ""
        else:
            print("\n---------------------TRIVIAL---------------------")
            print("1. Learn about compile")
            print("2. Learn about clean")
            print("3. Learn about run")
            print("4. Exit out of help")
            print("-------------------------------------------------")
            choice = input("Enter number of what you would you like to do: ")

def main():
    if (len(sys.argv) == 1 or sys.argv[1] not in ["compile", "clean", "run", "help"]):
        print("for help run either\n\n'python trivial help'\n\n or \n\n'./trivial help'\n")
        exit()
    if (sys.argv[1] == "compile"):
        compileTrivial(sys.argv[2:])
    elif (sys.argv[1] == "clean"):
        cleanTrivial()
    elif (sys.argv[1] == "run"):
        runTrivial(sys.argv[2:])
    elif (sys.argv[1] == "help"):
        helpTrivial()





if __name__ == "__main__":
    main()
